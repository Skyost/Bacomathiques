[{"data":1,"prerenderedAt":63},["ShallowReactive",2],{"/cours/premiere/algorithmique/resume/":3,"current-commit-sha":53,"/cours/premiere/algorithmique/resume/?comments":62},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"_id":8,"summary":9,"level":5,"id":10,"title":11,"chapter":12,"caption":13,"description":14,"difficulty":15,"title-search":16,"pdf":17,"preview":18,"toc":19,"_source":49,"_file":50,"_stem":51,"_extension":52},"/latex/lessons/premiere/algorithmique","premiere",false,"","content:latex:lessons:premiere:algorithmique.tex","\n\n\n\n\n\n\n\n\u003Ch2 id=\"definition\">Définition\u003C/h2>\n\u003Cp>\u003Cstrong>Un algorithme\u003C/strong> est une suite finie et ordonnée\nd’opérations ou d’instructions permettant de résoudre un problème ou\nd’obtenir un résultat. Ainsi, faire une recette de cuisine ou encore\neffectuer une division euclidienne à la main sont des exemples\nd’algorithmes.\u003C/p>\n\u003Cp>Dans ce cours, nous travaillerons à la fois avec des algorithmes \u003Ca href=\"https://python.org\">Python\u003C/a> et des algorithmes en\npseudo-code.\u003C/p>\n\u003Ch2 id=\"instructions\">Instructions\u003C/h2>\n\u003Ch3 id=\"creation-de-variables\">Création de variables\u003C/h3>\n\u003Cp>\u003Cstrong>Créer une variable\u003C/strong> permet de réserver un espace pour\ny stocker des données quelconques.\u003Cbr>\nOn donne un nom à chaque espace pour le repérer : ce sont les noms de\nvariables. Dans certains langages, on leur donne également un type\n(entier, réel, ...) pour travailler avec (ce qui n’est pas le cas dans\nPython).\u003C/p>\n\u003Cdiv id=\"formula-1\" class=\"bubble\" data-variant=\"formula\">\n\u003Ch4>En python\u003C/h4>\n\u003Cdiv class=\"sourceCode\" id=\"cb1\" data-language=\"python\">\u003Cpre class=\"sourceCode python\">\u003Ccode class=\"sourceCode python\">\u003Cspan id=\"cb1-1\">\u003Ca href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>nombre \u003Cspan class=\"op\">=\u003C/span> \u003Cspan class=\"dv\">0\u003C/span> \u003Cspan class=\"co\"># On crée la variable &quot;nombre&quot; et on lui assigne la valeur 0.\u003C/span>\u003C/span>\n\u003Cspan id=\"cb1-2\">\u003Ca href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>chaine \u003Cspan class=\"op\">=\u003C/span> \u003Cspan class=\"st\">&#39;Bonjour&#39;\u003C/span> \u003Cspan class=\"co\"># On crée la variable &quot;chaine&quot; et on lui assigne la valeur &#39;Bonjour&#39;.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\n\u003Ch3 id=\"affectations-de-valeurs\">Affectations de valeurs\u003C/h3>\n\u003Cp>Comme dit précédemment, les variables sont des \u003Cq>espaces\u003C/q> dans\nlequel il est possible de stocker des informations.\u003C/p>\n\u003Cp>Cependant, après avoir créé cet espace, celui-ci est encore vide.\nC’est pourquoi on doit le \u003Cq>remplir\u003C/q> : c’est \u003Cstrong>l’affectation\nd’une valeur à une variable\u003C/strong>.\u003C/p>\n\u003Cp>Il existe plusieurs manières d’affecter une valeur à une variable :\nsoit on lui donne directement sa valeur dans l’algorithme, soit on\ndemande à l’utilisateur d’entrer une valeur (il faut garder à l’esprit\nque nos algorithmes sont faits pour être utilisés par des\nutilisateurs).\u003C/p>\n\u003Cdiv id=\"formula-2\" class=\"bubble\" data-variant=\"formula\">\n\u003Ch4>En python\u003C/h4>\n\u003Cdiv class=\"sourceCode\" id=\"cb2\" data-language=\"python\">\u003Cpre class=\"sourceCode python\">\u003Ccode class=\"sourceCode python\">\u003Cspan id=\"cb2-1\">\u003Ca href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>x \u003Cspan class=\"op\">=\u003C/span> \u003Cspan class=\"bu\">int\u003C/span>(\u003Cspan class=\"bu\">input\u003C/span>(\u003Cspan class=\"st\">&#39;Veuillez entrer une valeur : &#39;\u003C/span>)) \u003Cspan class=\"co\"># L&#39;utilisateur va entrer une valeur, on la convertir en entier et on va affecter celui-ci à notre variable &quot;x&quot;.\u003C/span>\u003C/span>\n\u003Cspan id=\"cb2-2\">\u003Ca href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>y \u003Cspan class=\"op\">=\u003C/span> \u003Cspan class=\"dv\">2\u003C/span>\u003Cspan class=\"op\">*\u003C/span>x \u003Cspan class=\"op\">+\u003C/span> \u003Cspan class=\"dv\">10\u003C/span> \u003Cspan class=\"co\"># Une fois fait, &quot;y&quot; va prendre la valeur 2 * x + 10. Par exemple, si l&#39;utilisateur entre &quot;10&quot;, &quot;y&quot; vaudra 30.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\n\u003Cp>Une fois que l’on a affecté une valeur à une variable, il est encore\npossible de la changer !\u003C/p>\n\u003Ch3 id=\"affichage-de-variables\">Affichage de variables\u003C/h3>\n\u003Cp>Nos algorithmes étant faits pour être utilisés, il faut donc\n\u003Cstrong>retourner un résultat\u003C/strong> sinon ceux-ci seraient\ninutiles.\u003Cbr>\nC’est pourquoi, on peut \u003Cq>afficher\u003C/q> les valeurs des variables (les\nmontrer à l’utilisateur).\u003C/p>\n\u003Cdiv id=\"formula-3\" class=\"bubble\" data-variant=\"formula\">\n\u003Ch4>En python\u003C/h4>\n\u003Cdiv class=\"sourceCode\" id=\"cb3\" data-language=\"python\">\u003Cpre class=\"sourceCode python\">\u003Ccode class=\"sourceCode python\">\u003Cspan id=\"cb3-1\">\u003Ca href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>\u003Cspan class=\"bu\">print\u003C/span>(\u003Cspan class=\"st\">&#39;Voici la valeur de &quot;maVariable&quot; :&#39;\u003C/span>, maVariable) \u003Cspan class=\"co\"># Permet d&#39;afficher la valeur de &quot;maVariable&quot;.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\n\u003Ch2 id=\"blocs-dinstructions\">Blocs d’instructions\u003C/h2>\n\u003Ch3 id=\"definition-1\">Définition\u003C/h3>\n\u003Cp>Les blocs d’instructions sont des parties de l’algorithme (ce sont\ndes \u003Cq>algorithmes dans l’algorithme\u003C/q>) qui s’exécutent suivant\ncertaines conditions propres aux différents blocs d’instructions.\u003C/p>\n\u003Ch3 id=\"les-blocs-si-et-sinon\">Les blocs SI et SINON\u003C/h3>\n\u003Cp>Les blocs \u003Cstrong>SI\u003C/strong> et \u003Cstrong>SINON\u003C/strong> sont des\nblocs d’instructions très utilisés qui permettent de tester une\ncondition : si elle est réalisée, on va exécuter les instructions se\nsituant sous le bloc SI et sinon, on va exécuter celles se situant sous\nle bloc SINON.\u003C/p>\n\u003Cdiv id=\"formula-4\" class=\"bubble\" data-variant=\"formula\">\n\u003Ch4>En python\u003C/h4>\n\u003Cdiv class=\"sourceCode\" id=\"cb4\" data-language=\"python\">\u003Cpre class=\"sourceCode python\">\u003Ccode class=\"sourceCode python\">\u003Cspan id=\"cb4-1\">\u003Ca href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>x \u003Cspan class=\"op\">=\u003C/span> \u003Cspan class=\"dv\">2\u003C/span> \u003Cspan class=\"co\"># On attribue à &quot;x&quot; la valeur 2.\u003C/span>\u003C/span>\n\u003Cspan id=\"cb4-2\">\u003Ca href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>\u003Cspan class=\"cf\">if\u003C/span> x \u003Cspan class=\"op\">==\u003C/span> \u003Cspan class=\"dv\">3\u003C/span>: \u003Cspan class=\"co\"># Si &quot;x&quot; est égal à 3...\u003C/span>\u003C/span>\n\u003Cspan id=\"cb4-3\">\u003Ca href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>    \u003Cspan class=\"bu\">print\u003C/span>(\u003Cspan class=\"st\">&#39;&quot;x&quot; est égal à 3.&#39;\u003C/span>) \u003Cspan class=\"co\"># ... Alors on affiche ce message. Mais ici, &quot;x&quot; vaut 2 donc ce message ne sera jamais affiché.\u003C/span>\u003C/span>\n\u003Cspan id=\"cb4-4\">\u003Ca href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>\u003Cspan class=\"cf\">else\u003C/span>: \u003Cspan class=\"co\"># Sinon...\u003C/span>\u003C/span>\n\u003Cspan id=\"cb4-5\">\u003Ca href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>    \u003Cspan class=\"bu\">print\u003C/span>(\u003Cspan class=\"st\">&#39;&quot;x&quot; n\u003C/span>\u003Cspan class=\"ch\">\\&#39;\u003C/span>\u003Cspan class=\"st\">est pas égal à 3.&#39;\u003C/span>) \u003Cspan class=\"co\"># ... On affiche ce message.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\n\u003Ch3 id=\"la-boucle-pour\">La boucle POUR\u003C/h3>\n\u003Cp>La \u003Cstrong>boucle POUR\u003C/strong> est un bloc d’instruction qui\ns’exécute et qui va faire prendre à une variable toutes les valeurs\ncomprises dans un ensemble d’entiers.\u003C/p>\n\u003Cdiv id=\"formula-5\" class=\"bubble\" data-variant=\"formula\">\n\u003Ch4>En python\u003C/h4>\n\u003Cdiv class=\"sourceCode\" id=\"cb5\" data-language=\"python\">\u003Cpre class=\"sourceCode python\">\u003Ccode class=\"sourceCode python\">\u003Cspan id=\"cb5-1\">\u003Ca href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>\u003Cspan class=\"cf\">for\u003C/span> i \u003Cspan class=\"kw\">in\u003C/span> \u003Cspan class=\"bu\">range\u003C/span>(\u003Cspan class=\"op\">-\u003C/span>\u003Cspan class=\"dv\">5\u003C/span>, \u003Cspan class=\"dv\">6\u003C/span>): \u003Cspan class=\"co\"># Pour chaque entier entre -5 (inclus) et 6 (exclu)...\u003C/span>\u003C/span>\n\u003Cspan id=\"cb5-2\">\u003Ca href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>    \u003Cspan class=\"bu\">print\u003C/span>(i) \u003Cspan class=\"co\"># ... On affiche cet entier.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\n\u003Ch3 id=\"la-boucle-tant-que\">La boucle TANT QUE\u003C/h3>\n\u003Cp>Cette boucle, différente de la boucle POUR, permet d’exécuter son\nbloc d’instructions tant qu’une certaine condition est valable.\u003C/p>\n\u003Cdiv id=\"formula-6\" class=\"bubble\" data-variant=\"formula\">\n\u003Ch4>En python\u003C/h4>\n\u003Cdiv class=\"sourceCode\" id=\"cb6\" data-language=\"python\">\u003Cpre class=\"sourceCode python\">\u003Ccode class=\"sourceCode python\">\u003Cspan id=\"cb6-1\">\u003Ca href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>x \u003Cspan class=\"op\">=\u003C/span> \u003Cspan class=\"dv\">100\u003C/span> \u003Cspan class=\"co\"># On affecte à &quot;x&quot; la valeur 100.\u003C/span>\u003C/span>\n\u003Cspan id=\"cb6-2\">\u003Ca href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>\u003Cspan class=\"cf\">while\u003C/span> x \u003Cspan class=\"op\">&gt;\u003C/span> \u003Cspan class=\"dv\">10\u003C/span>: \u003Cspan class=\"co\"># Tant que x est supérieur à 10...\u003C/span>\u003C/span>\n\u003Cspan id=\"cb6-3\">\u003Ca href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>    x \u003Cspan class=\"op\">=\u003C/span> x \u003Cspan class=\"op\">/\u003C/span> \u003Cspan class=\"dv\">2\u003C/span> \u003Cspan class=\"co\"># On divise x par 2 (i.e. on affecte à &quot;x&quot; la valeur x/2).\u003C/span>\u003C/span>\n\u003Cspan id=\"cb6-4\">\u003Ca href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\">\u003C/a>    \u003Cspan class=\"bu\">print\u003C/span>(x) \u003Cspan class=\"co\"># On affiche la valeur de &quot;x&quot;.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\n\n","algorithmique","Algorithmique",8,"Les algorithmes sont utilisés dans tout ce qui se rapport à l’informatique, comme la conception de sites web !","L’algorithmique est l’étude et la production de règles et techniques qui sont impliquées dans la définition et la conception d’algorithmes, c’est-à-dire de processus systématiques de résolution d’un problème permettant de décrire précisément des étapes pour résoudre un problème algorithmique. Ce cours va vous permettre d’avoir de bonnes notions en Python (et en algorithmique de manière générale) afin d’étudier et de programmer des algorithmes par vous-même.",5,"algorithmique (premiere)","/pdf/premiere/algorithmique.pdf","/img/lessons/premiere/algorithmique/preview.jpg",[20,25,45],{"id":21,"text":22,"depth":23,"children":24},"definition","Définition",2,[],{"id":26,"text":27,"depth":23,"children":28},"blocs-dinstructions","Blocs d’instructions",[29,33,37,41],{"id":30,"text":22,"depth":31,"children":32},"definition-1",3,[],{"id":34,"text":35,"depth":31,"children":36},"les-blocs-si-et-sinon","Les blocs SI et SINON",[],{"id":38,"text":39,"depth":31,"children":40},"la-boucle-pour","La boucle POUR",[],{"id":42,"text":43,"depth":31,"children":44},"la-boucle-tant-que","La boucle TANT QUE",[],{"id":46,"text":47,"depth":23,"children":48},"algorithmes-sur-lordinateur","Algorithmes sur l’ordinateur",[],"content","latex/lessons/premiere/algorithmique.tex","latex/lessons/premiere/algorithmique","tex",{"_path":54,"_dir":7,"_draft":6,"_partial":6,"_locale":7,"long":55,"short":56,"_id":57,"_type":58,"title":59,"_source":49,"_file":60,"_stem":61,"_extension":58},"/latest-commit","9dda60ca64b1469d8df5abe5c130e7c2a7095777","9dda60c","content:latest-commit.json","json","Latest Commit","latest-commit.json","latest-commit",[],1761865564734]